{"version":3,"sources":["logo.svg","services/EventBus.js","components/ModelListView/ModelListOverlay.js","components/ModelListView/ModelListRow.js","components/ModelListView/ModelListTable.js","services/HttpModelService.js","views/ModelListView.js","models/SparkConfigs.js","components/ModelEditorView/SparkConfigTab/SparkConfigTab.js","components/ModelEditorView/SparkModelTab/SparkModelInputOutputRow.js","components/ModelEditorView/SparkModelTab/SparkModelInputOutputGrid.js","components/ModelEditorView/SparkModelTab/SparkModelTab.js","components/ModelEditorView/ModelTabViewer.js","views/ModelEditorView.js","MainRouter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","EventBus","this","eventEmitter","events","EventEmitter","ModelListOverlay","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","model","routeToModel","bind","assertThisInitialized","closeModal","overlayClass","position","width","height","top","left","right","bottom","backgroundColor","zIndex","setState","id","path","history","push","getEventEmitter","emit","_this2","react_default","a","createElement","style","className","model_name","model_id","white-space","generated_code","DEV","onClick","Component","withRouter","ModelListRow","on","sidebarActive","product_name","model_owner","environments","map","env","environment","join","ModelListView_ModelListOverlay","ModelListTable","class","scope","models","ModelListView_ModelListRow","key","BASE_PATH","MODEL_PATH","updateModel","data","axios","patch","concat","then","res","ModelListView","modelList","loading","get","results","role","ModelListView_ModelListTable","SparkConfigs","conf_name","SparkConfigTab","chunkConfigs","handleChange","handleConfig","flattenConfigs","zipConfigs","configChanges","console","log","searchTerm","configs","configVal","null","envConfigs","array","configDict","i","length","conf_value","obj","confArray","objArray","entries","name","val","application_context_configs","configArray","size","chunkedArray","slice","event","_this3","target","value","filteredArray","includes","_this4","newState","_this5","onChange","placeholder","overflow","config_row","index","config_entry","htmlFor","e","SparkModelInputOutputRow","file_type","file_label","file_name","settings","SparkModelInputOutputGrid","fileTypeList","input","output","newFileLabel","newFileName","newFileType","type","formatRequest","createNew","settingType","envSettings","stateArray","label","object","setting","SparkModelTab_SparkModelInputOutputRow","deleteEntry","fileType","SparkModelTab","SparkModelTab_SparkModelInputOutputGrid","ModelTabViewer","tab","switchTab","ModelEditorView_SparkConfigTab_SparkConfigTab","ModelEditorView_SparkModelTab_SparkModelTab","application_input_settings","application_output_settings","ModelEditorView","getModel","handleSubmit","currentEnv","match","params","getModelById","changes","switchEnv","ModelEditorView_ModelTabViewer","Routes","react_router_dom","react_router","exact","render","to","component","App","MainRouter_Routes","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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,CACxB,CAACC,UAAW,kBACZ,CAACA,UAAW,sBACZ,CAACA,UAAW,8BACZ,CAACA,UACD,uBACA,CAACA,UAAW,+BACZ,CAACA,UAAW,yBACZ,CAACA,UACD,iCACA,CAACA,UAAW,iCACZ,CAACA,UAAW,wBACZ,CAACA,UACD,mBACA,CAACA,UAAW,iBACZ,CAACA,UAAW,gBACZ,CAACA,UAAW,2BACZ,CAACA,UACD,2BACA,CAACA,UAAW,0BACZ,CAACA,UAAW,+BACZ,CAACA,UACD,iCACA,CAACA,UAAW,iCACZ,CAACA,UACD,mCACA,CAACA,UAAW,iCACZ,CAACA,UACD,mCACA,CAACA,UAAW,mCACZ,CAACA,UACD,gDACA,CAACA,UAAW,iDACZ,CAACA,UACD,uCACA,CAACA,UAAW,wCACZ,CAACA,UACD,6CACA,CAACA,UAAW,qCACZ,CAACA,UACD,yBACA,CAACA,UAAW,wBACZ,CAACA,UACD,6BACA,CAACA,UAAW,8BACZ,CAACA,UAAW,6BACZ,CAACA,UACD,eACA,CAACA,UAAW,wBACZ,CAACA,UAAW,cACZ,CAACA,UAAW,uBACZ,CAACA,UAAW,uBACZ,CAACA,UACD,kBACA,CAACA,UAAW,0BACZ,CAACA,UAAW,2BACZ,CAACA,UAAW,+BACZ,CAACA,UACD,wBACA,CAACA,UAAW,iCACZ,CAACA,UAAW,iCACZ,CAACA,UACD,6CACA,CAACA,UAAW,sCACZ,CAACA,UACD,0BACA,CAACA,UAAW,6BACZ,CAACA,UAAW,+BACZ,CAACA,UACD,0CACA,CAACA,UAAW,qCACZ,CAACA,UACD,8BACA,CAACA,UAAW,iCACZ,CAACA,UAAW,8BACZ,CAACA,UACD,0CACA,CAACA,UAAW,2CACZ,CAACA,UACD,2CACA,CAACA,UAAW,gCACZ,CAACA,UAAW,wCACZ,CAACA,UACD,sCACA,CAACA,UAAW,0CACZ,CAACA,UAAW,0CACZ,CAACA,UACD,mCACA,CAACA,UAAW,2BACZ,CAACA,UAAW,sBACZ,CAACA,UAAW,0BACZ,CAACA,UACD,4BACA,CAACA,UAAW,4BACZ,CAACA,UAAW,sCACZ,CAACA,UAAW,oBACZ,CAACA,UACD,wBACA,CAACA,UAAW,8BACZ,CAACA,UAAW,sCACZ,CAACA,UAAW,iBACZ,CAACA,UACD,yBACA,CAACA,UAAW,2BACZ,CAACA,UAAW,0BACZ,CAACA,UAAW,yBACZ,CAACA,UACD,4BACA,CAACA,UAAW,gCACZ,CAACA,UAAW,qCACZ,CAACA,UACD,mCACA,CAACA,UAAW,mCACZ,CAACA,UAAW,sCACZ,CAACA,UACD,kCACA,CAACA,UAAW,oBACZ,CAACA,UAAW,8BACZ,CAACA,UAAW,4BACZ,CAACA,UACD,8BACA,CAACA,UAAW,sCACZ,CAACA,UAAW,yCACZ,CAACA,UACD,mCACA,CAACA,UAAW,wCACZ,CAACA,UAAW,gCACZ,CAACA,UACD,gCACA,CAACA,UAAW,mCACZ,CAACA,UAAW,0BACZ,CAACA,UAAW,qBACZ,CAACA,UACD,mCACA,CAACA,UAAW,+BACZ,CAACA,UAAW,sBACZ,CAACA,UAAW,oBACZ,CAACA,UACD,sCACA,CAACA,UAAW,yBACZ,CAACA,UAAW,gCACZ,CAACA,UAAW,gCACZ,CAACA,UACD,6BACA,CAACA,UAAW,8BACZ,CAACA,UAAW,gCACZ,CAACA,UAAW,gCACZ,CAACA,UACD,gCACA,CAACA,UAAW,uCACZ,CAACA,UAAW,qCACZ,CAACA,UACD,mCACA,CAACA,UAAW,4CACZ,CAACA,UACD,oDACA,CAACA,UAAW,oDACZ,CAACA,UACD,6BACA,CAACA,UAAW,4BACZ,CAACA,UAAW,wBACZ,CAACA,UAAW,6BACZ,CAACA,UACD,oCACA,CAACA,UAAW,4BACZ,CAACA,UAAW,6BACZ,CAACA,UAAW,yBACZ,CAACA,UACD,iCACA,CAACA,UAAW,+BACZ,CAACA,UAAW,0BACZ,CAACA,UAAW,oCACZ,CAACA,UACD,oCACA,CAACA,UAAW,gEACZ,CAACA,UACD,6BACA,CAACA,UAAW,2BACZ,CAACA,UAAW,kCACZ,CAACA,UAAW,4BACZ,CAACA,UACD,qBACA,CAACA,UAAW,qBACZ,CAACA,UAAW,yBACZ,CAACA,UAAW,yBACZ,CAACA,UAAW,wBACZ,CAACA,UACD,wBACA,CAACA,UAAW,wBACZ,CAACA,UAAW,2BACZ,CAACA,UAAW,0CACZ,CAACA,UACD,mBACA,CAACA,UAAW,uBACZ,CAACA,UAAW,4BACZ,CAACA,UAAW,+BACZ,CAACA,UACD,4BACA,CAACA,UAAW,qDACZ,CAACA,UACD,+CACA,CAACA,UAAW,wBACZ,CAACA,UAAW,mCACZ,CAACA,UACD,mDACA,CAACA,UAAW,yDACZ,CAACA,UACD,2BACA,CAACA,UAAW,2BACZ,CAACA,UAAW,mDACZ,CAACA,UACD,+CACA,CAACA,UAAW,mDACZ,CAACA,UACD,mDACA,CAACA,UAAW,yDACZ,CAACA,UACD,yDACA,CAACA,UAAW,4CACZ,CAACA,UACD,oDACA,CAACA,UAAW,qBACZ,CAACA,UAAW,8BACZ,CAACA,UACD,gCACA,CAACA,UAAW,8BACZ,CAACA,UAAW,mBACZ,CAACA,UAAW,0BACZ,CAACA,UACD,6BACA,CAACA,UAAW,qCACZ,CAACA,UAAW,gCACZ,CAACA,UACD,iCACA,CAACA,UAAW,sCACZ,CAACA,UAAW,mCACZ,CAACA,UACD,+CACA,CAACA,UAAW,qDACZ,CAACA,UACD,4CACA,CAACA,UAAW,wCACZ,CAACA,UAAW,wCACZ,CAACA,UACD,mDACA,CAACA,UAAW,mDACZ,CAACA,UACD,4DACA,CAACA,UAAW,wCACZ,CAACA,UACD,4CACA,CAACA,UAAW,iCACZ,CAACA,UAAW,oCACZ,CAACA,UACD,iDACA,CAACA,UAAW,6BACZ,CAACA,UAAW,4CACZ,CAACA,UACD,6CACA,CAACA,UAAW,6CACZ,CAACA,UAAW,oCACZ,CAACA,UACD,sCACA,CAACA,UAAW,4DACZ,CAACA,UACD,8DACA,CAACA,UAAW,8BACZ,CAACA,UACD,mBACA,CAACA,UAAW,0BACZ,CAACA,UAAW,yBACZ,CAACA,UACD,oCACA,CAACA,UAAW,6BACZ,CAACA,UAAW,0CACZ,CAACA,UACD,6BACA,CAACA,UAAW,8BACZ,CAACA,UAAW,+BChJDC,cA5HX,SAAAA,EAAY/E,GAAO,IAAAC,EAAA,OAAAC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","file":"static/js/main.17ffd5ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import events from 'events';\r\n\r\nclass EventBus {\r\n    static eventEmitter = new events.EventEmitter();\r\n    static getEventEmitter() {\r\n        return this.eventEmitter;\r\n    }\r\n}\r\n\r\nexport default EventBus;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport EventBus from '../../services/EventBus';\r\n\r\nclass ModelListOverlay extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            model: \"\"\r\n        }\r\n        this.routeToModel = this.routeToModel.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n\r\n        this.overlayClass = {\r\n            position: 'fixed',\r\n            width: '100%',\r\n            height: '100%',\r\n            top: '0',\r\n            left: '0',\r\n            right: '0',\r\n            bottom: '0',\r\n            backgroundColor: 'rgba(0,0,0,0.5)',\r\n            zIndex: '2',\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({model: this.props.model}, () => {\r\n        });\r\n    }\r\n\r\n    routeToModel(id) {\r\n        this.closeModal();\r\n        var path = ('/models/' + id); \r\n        this.props.history.push(path);\r\n    }\r\n\r\n    closeModal() {\r\n        EventBus.getEventEmitter().emit('closeNav');\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div style={this.overlayClass}>\r\n                <div className=\"container-fluid h-100\">\r\n                    <div className=\"d-flex h-100 justify-content-end align-items-middle\">\r\n                        <div className=\"card h-100 d-flex w-auto bg-light\">\r\n                            <div className=\"card-header d-flex\">\r\n                                {this.state.model.model_name} - {this.state.model.model_id}\r\n                            </div>\r\n                            <div className=\"card-body p-2\">\r\n                                <div className=\"d-flex p-2 bg-dark h-100\">\r\n                                    <code style={{'white-space': 'pre-line'}}>\r\n                                        {this.state.model.generated_code.DEV}\r\n                                    </code>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-footer d-flex justify-content-between\">\r\n                                <button className=\"btn btn-success m-2\" onClick={() => this.routeToModel(this.state.model.model_id)}>\r\n                                    Edit Configuration\r\n                                </button>\r\n                                <button className=\"btn btn-warning m-2\">\r\n                                    Generate Code\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(ModelListOverlay);","import React, { Component } from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport ModelListOverlay from './ModelListOverlay';\r\nimport EventBus from '../../services/EventBus';\r\n\r\nclass ModelListRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        EventBus.getEventEmitter().on('closeNav', () => {\r\n            this.setState({sidebarActive: false});\r\n        })\r\n\r\n        this.state = {\r\n            sidebarActive: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            /*<tr onClick={() => this.routeToModel(this.props.model.model_id)}>\r\n                <td>{this.props.model.model_id}</td>\r\n                <td>{this.props.model.model_name}</td>\r\n                <td>{this.props.model.product_name}</td>\r\n                <td>{this.props.model.model_owner}</td>\r\n                <td>{(this.props.model.environments).map((env) => {\r\n                    return env.environment\r\n                }).join(', ')}</td>\r\n            </tr>*/\r\n\r\n            <tr onClick={() => {this.setState({sidebarActive:true})}}>\r\n                <td>{this.props.model.model_id}</td>\r\n                <td>{this.props.model.model_name}</td>\r\n                <td>{this.props.model.product_name}</td>\r\n                <td>{this.props.model.model_owner}</td>\r\n                <td>{(this.props.model.environments).map((env) => {\r\n                    return env.environment\r\n                }).join(', ')}</td>\r\n\r\n                {this.state.sidebarActive == true ?\r\n                    <ModelListOverlay model={this.props.model}/>\r\n                : null}\r\n            </tr>\r\n            \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(ModelListRow);","import React, { Component } from 'react';\r\nimport ModelListRow from './ModelListRow';\r\n\r\nclass ModelListTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div class=\"container\">\r\n                <table className=\"table table-hover w-100\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Model ID</th>\r\n                            <th scope=\"col\">Model Name</th>\r\n                            <th scope=\"col\">Product</th>\r\n                            <th scope=\"col\">Owner</th>\r\n                            <th scope=\"col\">Environment</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.props.models.map((model) => { \r\n                                return(\r\n                                    <ModelListRow model={model} key={model.model_id}/>\r\n                                )})\r\n                        }\r\n                    </tbody>\r\n                    <tfoot>\r\n                        \r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModelListTable;","import axios from 'axios';\r\n\r\nconst BASE_PATH = 'http://localhost:10222';\r\nconst MODEL_PATH = '/api/v1/models';\r\n\r\nexport function getModelList() {\r\n    return axios.get(`${BASE_PATH}${MODEL_PATH}`)\r\n        .then(res => {\r\n            return(res);\r\n        })\r\n}\r\n\r\nexport function getModelById(id) {\r\n    return axios.get(`${BASE_PATH}${MODEL_PATH}/${id}`)\r\n        .then(res => {\r\n            return (res);\r\n        })\r\n}\r\n\r\nexport function updateModel(id, data) {\r\n    return axios.patch(`${BASE_PATH}${MODEL_PATH}/${id}/`, data)\r\n        .then(res => {\r\n            return (res);\r\n        })\r\n}","import React, { Component } from 'react';\r\n\r\nimport ModelListTable from '../components/ModelListView/ModelListTable';\r\n\r\nimport { getModelList } from '../services/HttpModelService';\r\nimport ModelListOverlay from '../components/ModelListView/ModelListOverlay';\r\n\r\nclass ModelListView extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            modelList: [],\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({loading: true});\r\n        getModelList().then((res) => {\r\n            this.setState({modelList: res.data.results}, () => {\r\n                this.setState({loading: false})\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div className=\"card-header d-flex justify-content-center\">\r\n                    Model List\r\n                </div>\r\n                {this.state.loading==true ? <div className=\"progress m-1\">\r\n                    <div className=\"progress-bar progress-bar-animated progress-bar-striped bg-danger\" style={{width: '100%'}} role=\"progressbar\"></div>\r\n                </div> : null}\r\n                <div className=\"card-body d-flex\">\r\n                    <ModelListTable models={this.state.modelList}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModelListView;","export const SparkConfigs = [\r\n    {conf_name: \"spark.app.name\"},\r\n    {conf_name: \"spark.driver.cores\"},\r\n    {conf_name: \"spark.driver.maxResultSize\"},\r\n    {conf_name: \r\n    \"spark.driver.memory\"},\r\n    {conf_name: \"spark.driver.memoryOverhead\"},\r\n    {conf_name: \"spark.executor.memory\"},\r\n    {conf_name: \r\n    \"spark.executor.pyspark.memory\"},\r\n    {conf_name: \"spark.executor.memoryOverhead\"},\r\n    {conf_name: \"spark.extraListeners\"},\r\n    {conf_name: \r\n    \"spark.local.dir\"},\r\n    {conf_name: \"spark.logConf\"},\r\n    {conf_name: \"spark.master\"},\r\n    {conf_name: \"spark.submit.deployMode\"},\r\n    {conf_name: \r\n    \"spark.log.callerContext\"},\r\n    {conf_name: \"spark.driver.supervise\"},\r\n    {conf_name: \"spark.driver.extraClassPath\"},\r\n    {conf_name: \r\n    \"spark.driver.extraJavaOptions\"},\r\n    {conf_name: \"spark.driver.extraLibraryPath\"},\r\n    {conf_name: \r\n    \"spark.driver.userClassPathFirst\"},\r\n    {conf_name: \"spark.executor.extraClassPath\"},\r\n    {conf_name: \r\n    \"spark.executor.extraJavaOptions\"},\r\n    {conf_name: \"spark.executor.extraLibraryPath\"},\r\n    {conf_name: \r\n    \"spark.executor.logs.rolling.maxRetainedFiles\"},\r\n    {conf_name: \"spark.executor.logs.rolling.enableCompression\"},\r\n    {conf_name: \r\n    \"spark.executor.logs.rolling.maxSize\"},\r\n    {conf_name: \"spark.executor.logs.rolling.strategy\"},\r\n    {conf_name: \r\n    \"spark.executor.logs.rolling.time.interval\"},\r\n    {conf_name: \"spark.executor.userClassPathFirst\"},\r\n    {conf_name: \r\n    \"spark.redaction.regex\"},\r\n    {conf_name: \"spark.python.profile\"},\r\n    {conf_name: \r\n    \"spark.python.profile.dump\"},\r\n    {conf_name: \"spark.python.worker.memory\"},\r\n    {conf_name: \"spark.python.worker.reuse\"},\r\n    {conf_name: \r\n    \"spark.files\"},\r\n    {conf_name: \"spark.submit.pyFiles\"},\r\n    {conf_name: \"spark.jars\"},\r\n    {conf_name: \"spark.jars.packages\"},\r\n    {conf_name: \"spark.jars.excludes\"},\r\n    {conf_name: \r\n    \"spark.jars.ivy\"},\r\n    {conf_name: \"spark.jars.ivySettings\"},\r\n    {conf_name: \"spark.jars.repositories\"},\r\n    {conf_name: \"spark.pyspark.driver.python\"},\r\n    {conf_name: \r\n    \"spark.pyspark.python\"},\r\n    {conf_name: \"spark.reducer.maxSizeInFlight\"},\r\n    {conf_name: \"spark.reducer.maxReqsInFlight\"},\r\n    {conf_name: \r\n    \"spark.reducer.maxBlocksInFlightPerAddress\"},\r\n    {conf_name: \"spark.maxRemoteBlockSizeFetchToMem\"},\r\n    {conf_name: \r\n    \"spark.shuffle.compress\"},\r\n    {conf_name: \"spark.shuffle.file.buffer\"},\r\n    {conf_name: \"spark.shuffle.io.maxRetries\"},\r\n    {conf_name: \r\n    \"spark.shuffle.io.numConnectionsPerPeer\"},\r\n    {conf_name: \"spark.shuffle.io.preferDirectBufs\"},\r\n    {conf_name: \r\n    \"spark.shuffle.io.retryWait\"},\r\n    {conf_name: \"spark.shuffle.service.enabled\"},\r\n    {conf_name: \"spark.shuffle.service.port\"},\r\n    {conf_name: \r\n    \"spark.shuffle.service.index.cache.size\"},\r\n    {conf_name: \"spark.shuffle.maxChunksBeingTransferred\"},\r\n    {conf_name: \r\n    \"spark.shuffle.sort.bypassMergeThreshold\"},\r\n    {conf_name: \"spark.shuffle.spill.compress\"},\r\n    {conf_name: \"spark.shuffle.accurateBlockThreshold\"},\r\n    {conf_name: \r\n    \"spark.shuffle.registration.timeout\"},\r\n    {conf_name: \"spark.shuffle.registration.maxAttempts\"},\r\n    {conf_name: \"spark.eventLog.logBlockUpdates.enabled\"},\r\n    {conf_name: \r\n    \"spark.eventLog.longForm.enabled\"},\r\n    {conf_name: \"spark.eventLog.compress\"},\r\n    {conf_name: \"spark.eventLog.dir\"},\r\n    {conf_name: \"spark.eventLog.enabled\"},\r\n    {conf_name: \r\n    \"spark.eventLog.overwrite\"},\r\n    {conf_name: \"spark.eventLog.buffer.kb\"},\r\n    {conf_name: \"spark.ui.dagGraph.retainedRootRDDs\"},\r\n    {conf_name: \"spark.ui.enabled\"},\r\n    {conf_name: \r\n    \"spark.ui.killEnabled\"},\r\n    {conf_name: \"spark.ui.liveUpdate.period\"},\r\n    {conf_name: \"spark.ui.liveUpdate.minFlushPeriod\"},\r\n    {conf_name: \"spark.ui.port\"},\r\n    {conf_name: \r\n    \"spark.ui.retainedJobs\"},\r\n    {conf_name: \"spark.ui.retainedStages\"},\r\n    {conf_name: \"spark.ui.retainedTasks\"},\r\n    {conf_name: \"spark.ui.reverseProxy\"},\r\n    {conf_name: \r\n    \"spark.ui.reverseProxyUrl\"},\r\n    {conf_name: \"spark.ui.showConsoleProgress\"},\r\n    {conf_name: \"spark.worker.ui.retainedExecutors\"},\r\n    {conf_name: \r\n    \"spark.worker.ui.retainedDrivers\"},\r\n    {conf_name: \"spark.sql.ui.retainedExecutions\"},\r\n    {conf_name: \"spark.streaming.ui.retainedBatches\"},\r\n    {conf_name: \r\n    \"spark.ui.retainedDeadExecutors\"},\r\n    {conf_name: \"spark.ui.filters\"},\r\n    {conf_name: \"spark.ui.requestHeaderSize\"},\r\n    {conf_name: \"spark.broadcast.compress\"},\r\n    {conf_name: \r\n    \"spark.io.compression.codec\"},\r\n    {conf_name: \"spark.io.compression.lz4.blockSize\"},\r\n    {conf_name: \"spark.io.compression.snappy.blockSize\"},\r\n    {conf_name: \r\n    \"spark.io.compression.zstd.level\"},\r\n    {conf_name: \"spark.io.compression.zstd.bufferSize\"},\r\n    {conf_name: \"spark.kryo.classesToRegister\"},\r\n    {conf_name: \r\n    \"spark.kryo.referenceTracking\"},\r\n    {conf_name: \"spark.kryo.registrationRequired\"},\r\n    {conf_name: \"spark.kryo.registrator\"},\r\n    {conf_name: \"spark.kryo.unsafe\"},\r\n    {conf_name: \r\n    \"spark.kryoserializer.buffer.max\"},\r\n    {conf_name: \"spark.kryoserializer.buffer\"},\r\n    {conf_name: \"spark.rdd.compress\"},\r\n    {conf_name: \"spark.serializer\"},\r\n    {conf_name: \r\n    \"spark.serializer.objectStreamReset\"},\r\n    {conf_name: \"spark.memory.fraction\"},\r\n    {conf_name: \"spark.memory.storageFraction\"},\r\n    {conf_name: \"spark.memory.offHeap.enabled\"},\r\n    {conf_name: \r\n    \"spark.memory.offHeap.size\"},\r\n    {conf_name: \"spark.memory.useLegacyMode\"},\r\n    {conf_name: \"spark.shuffle.memoryFraction\"},\r\n    {conf_name: \"spark.storage.memoryFraction\"},\r\n    {conf_name: \r\n    \"spark.storage.unrollFraction\"},\r\n    {conf_name: \"spark.storage.replication.proactive\"},\r\n    {conf_name: \"spark.cleaner.periodicGC.interval\"},\r\n    {conf_name: \r\n    \"spark.cleaner.referenceTracking\"},\r\n    {conf_name: \"spark.cleaner.referenceTracking.blocking\"},\r\n    {conf_name: \r\n    \"spark.cleaner.referenceTracking.blocking.shuffle\"},\r\n    {conf_name: \"spark.cleaner.referenceTracking.cleanCheckpoints\"},\r\n    {conf_name: \r\n    \"spark.broadcast.blockSize\"},\r\n    {conf_name: \"spark.broadcast.checksum\"},\r\n    {conf_name: \"spark.executor.cores\"},\r\n    {conf_name: \"spark.default.parallelism\"},\r\n    {conf_name: \r\n    \"spark.executor.heartbeatInterval\"},\r\n    {conf_name: \"spark.files.fetchTimeout\"},\r\n    {conf_name: \"spark.files.useFetchCache\"},\r\n    {conf_name: \"spark.files.overwrite\"},\r\n    {conf_name: \r\n    \"spark.files.maxPartitionBytes\"},\r\n    {conf_name: \"spark.files.openCostInBytes\"},\r\n    {conf_name: \"spark.hadoop.cloneConf\"},\r\n    {conf_name: \"spark.hadoop.validateOutputSpecs\"},\r\n    {conf_name: \r\n    \"spark.storage.memoryMapThreshold\"},\r\n    {conf_name: \"spark.hadoop.mapreduce.fileoutputcommitter.algorithm.version\"},\r\n    {conf_name: \r\n    \"spark.rpc.message.maxSize\"},\r\n    {conf_name: \"spark.blockManager.port\"},\r\n    {conf_name: \"spark.driver.blockManager.port\"},\r\n    {conf_name: \"spark.driver.bindAddress\"},\r\n    {conf_name: \r\n    \"spark.driver.host\"},\r\n    {conf_name: \"spark.driver.port\"},\r\n    {conf_name: \"spark.network.timeout\"},\r\n    {conf_name: \"spark.port.maxRetries\"},\r\n    {conf_name: \"spark.rpc.numRetries\"},\r\n    {conf_name: \r\n    \"spark.rpc.retry.wait\"},\r\n    {conf_name: \"spark.rpc.askTimeout\"},\r\n    {conf_name: \"spark.rpc.lookupTimeout\"},\r\n    {conf_name: \"spark.core.connection.ack.wait.timeout\"},\r\n    {conf_name: \r\n    \"spark.cores.max\"},\r\n    {conf_name: \"spark.locality.wait\"},\r\n    {conf_name: \"spark.locality.wait.node\"},\r\n    {conf_name: \"spark.locality.wait.process\"},\r\n    {conf_name: \r\n    \"spark.locality.wait.rack\"},\r\n    {conf_name: \"spark.scheduler.maxRegisteredResourcesWaitingTime\"},\r\n    {conf_name: \r\n    \"spark.scheduler.minRegisteredResourcesRatio\"},\r\n    {conf_name: \"spark.scheduler.mode\"},\r\n    {conf_name: \"spark.scheduler.revive.interval\"},\r\n    {conf_name: \r\n    \"spark.scheduler.listenerbus.eventqueue.capacity\"},\r\n    {conf_name: \"spark.scheduler.blacklist.unschedulableTaskSetTimeout\"},\r\n    {conf_name: \r\n    \"spark.blacklist.enabled\"},\r\n    {conf_name: \"spark.blacklist.timeout\"},\r\n    {conf_name: \"spark.blacklist.task.maxTaskAttemptsPerExecutor\"},\r\n    {conf_name: \r\n    \"spark.blacklist.task.maxTaskAttemptsPerNode\"},\r\n    {conf_name: \"spark.blacklist.stage.maxFailedTasksPerExecutor\"},\r\n    {conf_name: \r\n    \"spark.blacklist.stage.maxFailedExecutorsPerNode\"},\r\n    {conf_name: \"spark.blacklist.application.maxFailedTasksPerExecutor\"},\r\n    {conf_name: \r\n    \"spark.blacklist.application.maxFailedExecutorsPerNode\"},\r\n    {conf_name: \"spark.blacklist.killBlacklistedExecutors\"},\r\n    {conf_name: \r\n    \"spark.blacklist.application.fetchFailure.enabled\"},\r\n    {conf_name: \"spark.speculation\"},\r\n    {conf_name: \"spark.speculation.interval\"},\r\n    {conf_name: \r\n    \"spark.speculation.multiplier\"},\r\n    {conf_name: \"spark.speculation.quantile\"},\r\n    {conf_name: \"spark.task.cpus\"},\r\n    {conf_name: \"spark.task.maxFailures\"},\r\n    {conf_name: \r\n    \"spark.task.reaper.enabled\"},\r\n    {conf_name: \"spark.task.reaper.pollingInterval\"},\r\n    {conf_name: \"spark.task.reaper.threadDump\"},\r\n    {conf_name: \r\n    \"spark.task.reaper.killTimeout\"},\r\n    {conf_name: \"spark.stage.maxConsecutiveAttempts\"},\r\n    {conf_name: \"spark.dynamicAllocation.enabled\"},\r\n    {conf_name: \r\n    \"spark.dynamicAllocation.executorIdleTimeout\"},\r\n    {conf_name: \"spark.dynamicAllocation.cachedExecutorIdleTimeout\"},\r\n    {conf_name: \r\n    \"spark.dynamicAllocation.initialExecutors\"},\r\n    {conf_name: \"spark.dynamicAllocation.maxExecutors\"},\r\n    {conf_name: \"spark.dynamicAllocation.minExecutors\"},\r\n    {conf_name: \r\n    \"spark.dynamicAllocation.executorAllocationRatio\"},\r\n    {conf_name: \"spark.dynamicAllocation.schedulerBacklogTimeout\"},\r\n    {conf_name: \r\n    \"spark.dynamicAllocation.sustainedSchedulerBacklogTimeout\"},\r\n    {conf_name: \"spark.streaming.backpressure.enabled\"},\r\n    {conf_name: \r\n    \"spark.streaming.backpressure.initialRate\"},\r\n    {conf_name: \"spark.streaming.blockInterval\"},\r\n    {conf_name: \"spark.streaming.receiver.maxRate\"},\r\n    {conf_name: \r\n    \"spark.streaming.receiver.writeAheadLog.enable\"},\r\n    {conf_name: \"spark.streaming.unpersist\"},\r\n    {conf_name: \"spark.streaming.stopGracefullyOnShutdown\"},\r\n    {conf_name: \r\n    \"spark.streaming.kafka.maxRatePerPartition\"},\r\n    {conf_name: \"spark.streaming.kafka.minRatePerPartition\"},\r\n    {conf_name: \"spark.streaming.kafka.maxRetries\"},\r\n    {conf_name: \r\n    \"spark.streaming.ui.retainedBatches\"},\r\n    {conf_name: \"spark.streaming.driver.writeAheadLog.closeFileAfterWrite\"},\r\n    {conf_name: \r\n    \"spark.streaming.receiver.writeAheadLog.closeFileAfterWrite\"},\r\n    {conf_name: \"spark.r.numRBackendThreads\"},\r\n    {conf_name: \r\n    \"spark.r.command\"},\r\n    {conf_name: \"spark.r.driver.command\"},\r\n    {conf_name: \"spark.r.shell.command\"},\r\n    {conf_name: \r\n    \"spark.r.backendConnectionTimeout\"},\r\n    {conf_name: \"spark.r.heartBeatInterval\"},\r\n    {conf_name: \"spark.graphx.pregel.checkpointInterval\"},\r\n    {conf_name: \r\n    \"spark.deploy.recoveryMode\"},\r\n    {conf_name: \"spark.deploy.zookeeper.url\"},\r\n    {conf_name: \"spark.deploy.zookeeper.dir\"}\r\n\r\n]","import React, { Component } from 'react';\r\n\r\nimport { SparkConfigs } from '../../../models/SparkConfigs';\r\n\r\nimport EventBus from '../../../services/EventBus';\r\n\r\nimport { updateModel } from '../../../services/HttpModelService';\r\n\r\nclass SparkConfigTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.chunkConfigs = this.chunkConfigs.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleConfig = this.handleConfig.bind(this);\r\n        this.flattenConfigs = this.flattenConfigs.bind(this);\r\n        this.zipConfigs = this.zipConfigs.bind(this);\r\n\r\n        EventBus.getEventEmitter().on('submit', (id) => {\r\n            updateModel(id, this.zipConfigs(this.state.configChanges)).then(res => {\r\n                console.log(res);\r\n            })\r\n        });\r\n\r\n        this.state = {\r\n            searchTerm: '',\r\n            configs: [],\r\n            configVal: '',\r\n            configChanges: {\r\n                null: null\r\n            }\r\n        }\r\n    }\r\n\r\n    returnConfigs() {\r\n        return(this.state.configChanges)\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        if (this.props.envConfigs) {\r\n            this.setState({configChanges: this.flattenConfigs(this.props.envConfigs)}, () => {\r\n                console.log(this.state.configChanges);\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({configs: this.chunkConfigs(SparkConfigs, 3)});\r\n    }\r\n\r\n    flattenConfigs(array) {\r\n        var configDict = {};\r\n        for (var i = 0; i<array.length; i++) {\r\n            configDict[array[i].conf_name] = array[i].conf_value;\r\n        }\r\n        return configDict;\r\n    }\r\n\r\n    zipConfigs(obj) {\r\n        var confArray = [];\r\n        var objArray = Object.entries(obj);\r\n        for (var i = 0; i < objArray.length; i++) {\r\n            var name = objArray[i][0];\r\n            var val = objArray[i][1];\r\n            confArray.push({'conf_name': name, 'conf_value': val})\r\n        }\r\n        return({\r\n            environments: [\r\n                {environment: this.props.env,\r\n                application_context_configs: confArray}\r\n            ]\r\n        })\r\n    }\r\n\r\n    chunkConfigs(configArray, size) {\r\n        var chunkedArray = [];\r\n        for (var i = 0; i < configArray.length; i+=size) {\r\n            chunkedArray.push(configArray.slice(i, i+size));\r\n        }\r\n        return chunkedArray;\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({searchTerm: event.target.value}, () => {\r\n            var filteredArray = [];\r\n            for(var i = 0; i < SparkConfigs.length; i++) {\r\n                if(SparkConfigs[i].conf_name.includes(this.state.searchTerm)) {\r\n                    filteredArray.push(SparkConfigs[i]);\r\n                }\r\n            }\r\n            this.setState({configs: (this.chunkConfigs(filteredArray, 3))});\r\n        });\r\n    }\r\n\r\n    handleConfig(event, conf_name) {\r\n        var newState = this.state.configChanges;\r\n        this.setState({configVal: event.target.value}, () => {\r\n            newState[conf_name] = this.state.configVal;\r\n            this.setState({configChanges: newState});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-12\">\r\n                        <span className=\"d-flex justify-content-center\">\r\n                            <input className=\"form-control w-50 my-2\" id=\"search\" value={this.state.searchTerm} onChange={this.handleChange.bind(this)} placeholder=\"Search...\"/>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container\" style={{height:'60vh', overflow: \"auto\"}}>\r\n                    {this.state.configs.map((config_row, index) => { \r\n                        return(\r\n                        <div key={index} className=\"row\">\r\n                            {config_row.map((config_entry, index) => {\r\n                                return(\r\n                                <div key={(\"config_entry\"+index)}className=\"col-sm-4\">\r\n                                    <div className=\"form-group text-truncate\">\r\n                                        <label htmlFor={config_entry.conf_name}>{config_entry.conf_name}</label>\r\n                                        <input className=\"form-control\" value={this.state.configChanges[config_entry.conf_name]} id={config_entry.conf_name} onChange={(e) => this.handleConfig(e, config_entry.conf_name)}/>\r\n                                    </div>\r\n                                </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    )})}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SparkConfigTab;","import React, { Component } from 'react';\r\n\r\nclass SparkModelInputOutputRow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file_type: \"\",\r\n            file_label: \"\",\r\n            file_name: \"\"\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState(this.props.settings);\r\n    }\r\n\r\n    render() {\r\n        return([\r\n                <td>\r\n                    {this.state.file_label}\r\n                </td>,\r\n                <td>\r\n                    {this.state.file_name} \r\n                </td>,\r\n                <td>\r\n                    {this.state.file_type}\r\n                </td>\r\n            ]\r\n        );\r\n    }\r\n}\r\n\r\nexport default SparkModelInputOutputRow;","import React, { Component } from 'react';\r\nimport SparkModelInputOutputRow from './SparkModelInputOutputRow';\r\n\r\nimport EventBus from '../../../services/EventBus';\r\nimport {updateModel} from '../../../services/HttpModelService';\r\n\r\nclass SparkModelInputOutputGrid extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.fileTypeList = {\r\n            'input' : [\r\n                'Historical Data',\r\n                'Economic Scenario',\r\n                'Other'\r\n            ],\r\n            'output' : [\r\n                'Prediction',\r\n                'Result',\r\n                'Other'\r\n            ]\r\n        }\r\n\r\n        this.state = {\r\n            settings: [],\r\n            newFileLabel: '',\r\n            newFileName:'',\r\n            newFileType:this.fileTypeList[this.props.type][0]\r\n        }\r\n\r\n        EventBus.getEventEmitter().on('submit', (id) => {\r\n            updateModel(id, this.formatRequest()).then(res => {\r\n                console.log(res);\r\n            })\r\n        });\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createNew = this.createNew.bind(this);\r\n        this.formatRequest = this.formatRequest.bind(this);\r\n    }\r\n\r\n    formatRequest() {\r\n        var settingType = (this.props.type === \"input\" ? \"application_input_settings\" : \"application_output_settings\")\r\n        var envSettings = {}\r\n        envSettings['environment'] = this.props.env;\r\n        envSettings[settingType] = this.state.settings;\r\n        var reqBody = {\r\n            environments: [\r\n                envSettings\r\n            ]\r\n        }\r\n        return reqBody;\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({settings: this.props.settings});\r\n    }\r\n\r\n    createNew() {\r\n        var stateArray = this.state.settings;\r\n        stateArray.push({file_name: this.state.newFileName, file_type: this.state.newFileType, file_label: this.state.newFileLabel});\r\n        this.setState({settings: stateArray}, () => {\r\n            this.setState({newFileName: '',newFileType: '',newFileLabel: ''})\r\n        });\r\n    }\r\n\r\n    deleteEntry(label) {\r\n        var stateArray = this.state.settings;\r\n        for (var i = 0; i < stateArray.length; i++) {\r\n            if (stateArray[i].file_label == label) {\r\n                stateArray[i].file_type = '';\r\n            }\r\n        }\r\n        this.setState({settings: stateArray});\r\n    }\r\n\r\n    handleChange(event) {\r\n        var object = {};\r\n        object[event.target.id] = event.target.value;\r\n        this.setState(object);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <table class=\"table table-hover\">\r\n                <thead>\r\n                    <th scope=\"col\">File Label</th>\r\n                    <th scope=\"col\">File Name</th>\r\n                    <th scope=\"col\">File Type</th>\r\n                    <th scope=\"col\">+ / -</th>\r\n                </thead>\r\n                <tbody>\r\n                    {this.state.settings ? this.state.settings.map((setting) => {\r\n                        return(\r\n                            setting.file_type ? <tr>\r\n                                <SparkModelInputOutputRow type={this.props.type} settings={setting}/>\r\n                                <td>\r\n                                    <button class=\"btn btn-danger btn-block\" onClick={() => this.deleteEntry(setting.file_label)}>x</button>\r\n                                </td>\r\n                            </tr>\r\n                            : null                            \r\n                        )\r\n                    }):null}\r\n                    <tr>\r\n                        <td>\r\n                            <input class=\"form-control\" value={this.state.newFileLabel} id=\"newFileLabel\" placeholder=\"Enter a file label...\" onChange={(e) => this.handleChange(e)}/>\r\n                        </td>\r\n                        <td>\r\n                            <input class=\"form-control\" id=\"newFileName\" value={this.state.newFileName} placeholder=\"Enter a file name...\" onChange={(e) => this.handleChange(e)}/>\r\n                        </td>\r\n                        <td>\r\n                            <select class=\"form-control\" id=\"newFileType\" value={this.state.newFileType} onChange={(e) => this.handleChange(e)}>\r\n                                {this.fileTypeList[this.props.type].map((fileType) => {\r\n                                    return(<option>{fileType}</option>);\r\n                                })}\r\n                            </select>\r\n                        </td>\r\n                        <td>\r\n                            <button class=\"btn btn-success btn-block\" onClick={() => this.createNew()}>+</button>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SparkModelInputOutputGrid;","import React, { Component } from 'react';\r\nimport SparkModelInputOutputGrid from './SparkModelInputOutputGrid';\r\n\r\nclass SparkModelTab extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"bg-light\">\r\n                <div className=\"container p-5\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            Inputs\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <SparkModelInputOutputGrid type={\"input\"} settings={this.props.settings.input} env={this.props.env}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card mt-3\">\r\n                        <div className=\"card-header\">\r\n                            Outputs\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <SparkModelInputOutputGrid type={\"output\"} settings={this.props.settings.output} env={this.props.env}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SparkModelTab;","import React, { Component } from 'react';\r\nimport SparkConfigTab from './SparkConfigTab/SparkConfigTab';\r\nimport SparkModelTab from './SparkModelTab/SparkModelTab';\r\n\r\nclass ModelTabViewer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            tab: 'spark'\r\n        }        \r\n\r\n        this.switchTab = this.switchTab.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"w-100 container-fluid\">\r\n                <ul className=\"nav nav-tabs nav-fill\">\r\n                    <li className=\"nav-item\">\r\n                        <a className={this.state.tab == 'spark' ? 'nav-link active bg-light text-dark' : 'nav-link'} onClick={() => this.switchTab('spark')}>\r\n                            Spark Config\r\n                        </a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className={this.state.tab == 'model' ? 'nav-link active bg-light text-dark' : 'nav-link'} onClick={() => this.switchTab('model')}>\r\n                            I/O Config\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"container-fluid px-0 border-left border-right border-bottom\">\r\n                    {this.state.tab=='spark' ? <SparkConfigTab envConfigs={this.props.env.application_context_configs} env={this.props.env.environment}/> : null}\r\n                    {this.state.tab=='model' ? <SparkModelTab settings={{'input': this.props.env.application_input_settings, 'output': this.props.env.application_output_settings}} env={this.props.env.environment}/>  : null}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    switchTab(tab) {\r\n        this.setState({ tab: tab });\r\n    }\r\n}\r\n\r\nexport default ModelTabViewer;","import React, { Component } from 'react';\r\nimport ModelTabViewer from '../components/ModelEditorView/ModelTabViewer';\r\n\r\nimport { SparkModelList } from '../models/SparkModel';\r\nimport { getModelById } from '../services/HttpModelService';\r\nimport EventBus from '../services/EventBus';\r\n\r\nclass ModelEditorView extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getModel = this.getModel.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        \r\n        this.state = {\r\n            model: {\r\n                model_id: null,\r\n                model_name: null,\r\n                product_name: null,\r\n                model_owner: null,\r\n                environments: []\r\n            },\r\n            currentEnv: {\r\n                environment: null\r\n            },\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.setState({loading:true});\r\n        this.getModel(this.props.match.params.id);\r\n    }\r\n\r\n    getModel(id) {\r\n        this.setState({loading: true});\r\n        getModelById(this.props.match.params.id).then(res => {\r\n            this.setState({model: res.data, currentEnv: res.data.environments[0]}, () => {\r\n                this.setState({loading: false});\r\n            });\r\n        })\r\n    }\r\n\r\n    switchEnv(env) {\r\n        this.setState({currentEnv: env});\r\n    }\r\n\r\n    handleSubmit() {\r\n        EventBus.getEventEmitter().emit('submit', this.state.model.model_id);\r\n    }\r\n\r\n    render() { \r\n        console.log(this.state.changes);       \r\n        return(\r\n            <div>\r\n                <div className=\"card-header justify-content-center\">\r\n                    {this.state.loading\r\n                    ?   <div className=\"progress m-1\">\r\n                            <div className=\"progress-bar progress-bar-animated progress-bar-striped bg-danger\" style={{width: '100%'}} role=\"progressbar\"></div>\r\n                        </div>\r\n                    :   <div className=\"justify-content-between d-flex\">\r\n                            <div>\r\n                                <span className=\"d-flex\"><h1 className=\"card-title\">{this.state.model.model_id} | {this.state.model.model_name}</h1></span>\r\n                                <span className=\"d-flex\"><h3 className=\"card-subtitle text-muted\">{this.state.model.product_name} - {this.state.model.model_owner}</h3></span>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>\r\n                <div className=\"card-body d-flex justify-content-center\">\r\n                {this.state.loading==true ? <div className=\"progress m-1\">\r\n                <div className=\"progress-bar progress-bar-animated progress-bar-striped bg-danger\" style={{width: '100%'}} role=\"progressbar\"></div>\r\n                </div> : null}\r\n                    {this.state.model.environments.map((env) => {\r\n                        return(\r\n                            <button className={this.state.currentEnv.environment == env.environment ? 'btn mx-1 justify-content-between btn-primary' : 'btn mx-1 justify-content-between btn-secondary'} onClick={() => this.switchEnv(env)}>\r\n                                <small className=\"mr-1\">\r\n                                    {env.environment}\r\n                                </small>\r\n                                <span class=\"badge badge-pill badge-light\">\r\n                                    {env.application_context_configs.length}\r\n                                </span>\r\n                            </button>\r\n                        )\r\n                    })}\r\n                </div>\r\n                <hr className=\"m-0\"/>\r\n                <div className=\"card-body d-flex\">\r\n                    <ModelTabViewer env={this.state.currentEnv}/>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button className=\"btn btn-success float-right\" onClick={() => {this.handleSubmit()}}>Submit</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    } \r\n}\r\n\r\nexport default ModelEditorView;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\r\n\r\nimport ModelListView from './views/ModelListView';\r\nimport ModelEditorView from './views/ModelEditorView';\r\n\r\nexport const Routes = () => (\r\n    <Router>\r\n        <Switch>\r\n            <Route exact path = '/' render={() => (<Redirect to=\"/models/\"/>)}/>\r\n            <Route exact path = '/models/' component = { ModelListView }/>\r\n            <Route exact path = '/models/:id' component = { ModelEditorView }/>\r\n        </Switch>\r\n    </Router>\r\n)","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { Routes } from './MainRouter';\n\nfunction App() {\n  return (\n    <div className=\"d-flex justify-content-center mt-5\">\n      <div className=\"card w-75\">\n        <Routes/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}